/**
 * Created by root on 14.03.17.
 */

function User(id) {
    this.id = id || "";
    this.username = "";
    this.localAddress="";
    this.localPort = "";
    this.remoteAddress="";
    this.remotePort = "";

    this.setLocalAddress = function(address) {
        this.localAddress = address
    }

    this.setUserName = function (name) {
        this.username = name
    }
    this.setLocalPort= function(port) {
        this.localPort = port
    }
    this.setRemoteAddress= function(address) {
        this.remoteAddress = address
    }

    this.setRemotePort= function(port) {
        this.remotePort = port
    }

    this.updateFields = function (data) {
        for(var dataField in data)
        {
            if(this[dataField] != undefined)
                this[dataField] = data[dataField];

        }
    }

}

function UserStore(){

    this.userList = [];

    this.getUserList = function () {
        return this.userList;
    }
    this.addUser = function (id) {
        this.userList.push(new User(id));

    }


    /*TODO find bag here, cant find twice by IF*/
    this.findById = function (id) {
        return this.userList.find(function (user) {
            return user.id == id;
        });
    }

    this.deleteById = function (id) {
        this.userList.map(function(user,index,list) {
            if (user.id == id) {
                list.splice(index,1);
                return 0;
            }
        })

    }
    this.findByName = function (name) {
        return this.userList.find(function (user) {
            return user.username == name;
        });
    }
    this.findAllByName = function (name) {
        return this.userList.filter(function (user) {
            return user.username.includes(name);
        });
    }
    this.checkUsername = function (name) {
        if(this.findByName(name))
        {
            return true;

        }
        else
        {
            return false;
        }

    }
    this.updateUser = function (id,data) {
        var user = this.findById(id);
        if(user)
        {
            if(!this.checkUsername(data.username))
            {

                var index = this.userList.indexOf(user);
                user.updateFields(data);
                this.userList[index] = user;

            }
            else
            {
                //this.deleteById(id);
                throw {username:data.username,text:"This username is exist " +data.username};
            }
        }

    }
        this.updateUserWithoutCheck = function (id,data) {
        var user = this.findById(id);
        if(user)
        {


                var index = this.userList.indexOf(user);
                user.updateFields(data);
                this.userList[index] = user;

        }

    }

}

module.exports.User = User;
module.exports.UserStore = UserStore;


